apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: device-api-notification
  namespace: default
spec:
  args:
  - name: step-name
  - name: device-count
  - name: device-range-start
  - name: device-range-end
  - name: api-endpoint
    value: "https://discerning-surprise-production.up.railway.app/api/v1/start-config-update-on-devices"
  metrics:
  - name: device-notification
    interval: 5s
    count: 1  # Run exactly once per step
    successCondition: result == "success"
    failureLimit: 0
    provider:
      job:
        spec:
          template:
            spec:
              restartPolicy: Never
              containers:
              - name: api-notifier
                image: curlimages/curl:8.1.0
                command: ["/bin/sh"]
                args:
                - -c
                - |
                  # Generate device list for this step
                  DEVICE_LIST=""
                  START={{args.device-range-start}}
                  END={{args.device-range-end}}
                  for i in $(seq $START $END); do
                    DEVICE_ID=$(printf "device-%03d" $i)
                    if [ -z "$DEVICE_LIST" ]; then
                      DEVICE_LIST="\"$DEVICE_ID\""
                    else
                      DEVICE_LIST="$DEVICE_LIST,\"$DEVICE_ID\""
                    fi
                  done
                  
                  # Create JSON payload in the exact format required
                  JSON_PAYLOAD="{\"devices\":[$DEVICE_LIST]}"
                  
                  echo "Sending notification for step {{args.step-name}} with $(({{args.device-range-end}} - {{args.device-range-start}} + 1)) devices..."
                  echo "JSON Payload: $JSON_PAYLOAD"
                  
                  # Make API call exactly as specified
                  RESPONSE=$(curl -s -w "%{http_code}" --location \
                    -H "Content-Type: application/json" \
                    -d "$JSON_PAYLOAD" \
                    {{args.api-endpoint}})
                  
                  HTTP_CODE="${RESPONSE: -3}"
                  RESPONSE_BODY="${RESPONSE%???}"
                  
                  echo "HTTP Status: $HTTP_CODE"
                  echo "Response: $RESPONSE_BODY"
                  
                  # Check if request was successful
                  if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
                    echo "success"
                  else
                    echo "API call failed with status $HTTP_CODE"
                    exit 1
                  fi
                env:
                - name: STEP_NAME
                  value: "{{args.step-name}}"
                - name: DEVICE_COUNT
                  value: "{{args.device-count}}"
                resources:
                  requests:
                    memory: "32Mi"
                    cpu: "50m"
                  limits:
                    memory: "128Mi"
                    cpu: "200m"

---
# Alternative template using web provider (simpler but cannot generate individual device IDs)
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: device-api-notification-web
  namespace: default
spec:
  args:
  - name: step-name
  - name: device-count
  - name: device-range-start
  - name: device-range-end
  - name: api-endpoint
    value: "https://discerning-surprise-production.up.railway.app/api/v1/start-config-update-on-devices"
  metrics:
  - name: device-notification-web
    interval: 10s
    count: 1
    successCondition: result.statusCode >= 200 && result.statusCode < 300
    failureLimit: 0
    provider:
      web:
        url: "{{args.api-endpoint}}"
        method: POST
        headers:
        - key: Content-Type
          value: application/json
        jsonBody:
          devices: 
            - "device-{{args.device-range-start}}-to-{{args.device-range-end}}-range"
